import asyncio
import config 
import os
import time
from pyrogram import Client
from rich.console import Console
from random import randint
console =Console()

reactions=["üëç","‚ù§Ô∏è","üî•","ü•∞","üëè"]

async def like(data, number):
    line=data[0]
    proxy=None
    if data[1]!=None:
        proxy=data[1].split(":")
        proxy = {
         "scheme": "socks5",  # "socks4", "socks5" and "http" are supported
         "hostname": proxy[0],
         "port": int(proxy[1]),
         "username": proxy[2],
         "password": proxy[3]
        }
    try:
        console.print(f"[blue] –ü–æ–ø—ã—Ç–∫–∞ –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç {line}\n –ü—Ä–æ–∫—Å–∏: {proxy}")
        async with Client(f"{config.folder}my_acc", session_string=line, proxy=proxy) as app:
            console.print("[green] –ü–æ–ø—ã—Ç–∫–∞ —É—Å–ø–µ—à–Ω–∞!")
            history=app.get_chat_history(config.chat)
            last_id=0
            if os.path.isfile(f"id_{number}.txt"):
                with open(file=f"id_{number}.txt", mode="r") as file:
                    last_id =file.readline()
                    if last_id!="":
                        last_id=int(last_id)
                    else:
                        last_id=0
            with open(file=f"id_{number}.txt", mode="w+") as file:
                async for msg in history:
                    file.write(str(msg.id))
                    console.print(f"id –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ—Å—Ç–∞: {msg.id}")
                    break
            try:
                console.print("–ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é...")
                await app.read_chat_history(config.chat)
            except:
                console.print("–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å:(")
            
            async for message in app.get_chat_history(config.chat):
                msg_id=message.id
                if msg_id<=last_id:
                    console.print(f"[green] –ü–æ—Å—Ç—ã –∫–æ–Ω—á–∏–ª–∏—Å—å")
                    break
                if msg_id==1:
                    break
                try:
                    text=""
                    try:
                        text=message.text[0:30]
                    except:
                        text="–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
                        console.print("–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç")
                    finally:
                        console.print(f"[blue]–ø–æ–ø—ã—Ç–∫–∞ –ª–∞–π–∫–Ω—É—Ç—å {msg_id} –ø–æ—Å—Ç —Å–≤–µ—Ä—Ö—É\n\n –ó–∞–≥–æ–ª–æ–≤–æ–∫: {text}...")
                        await app.send_reaction(config.chat,message.id, emoji=reactions[randint(0,4)])
                        console.print("[blue]–ñ–º–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É...")
                        try:
                            await message.click()
                        except:
                            console.print("[blue]–ù–µ—Ç –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –ª–∞–π–∫–Ω—É—Ç—å")
                        finally:
                            continue

                except:
                    console.print_exception()
                    console.print(f"[red]–ù–µ —É–¥–∞–ª–æ—Å—å –ª–∞–π–∫–Ω—É—Ç—å {msg_id} –ø–æ—Å—Ç —Å–≤–µ—Ä—Ö—É:(")
                finally:
                    continue
    except:
        console.print_exception()
        console.print("[red]!!!–û–®–ò–ë–ö–ê!!! –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç")
async def main():
    console.print("[bold green]–ü—Ä–∏–≤–µ—Ç. –í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π –Ω–æ–º–µ—Ä, —á—Ç–æ–±—ã —è —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞–ª–∞:")
    console.print("[blue]1 - –¥–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã")
    console.print("[blue]2-–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É —Å —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏")
    try:
        a = int(console.input("[purple]–í–≤–µ–¥–∏ —á–∏—Å–ª–æ: "))
    except:
        console.print("[red]!!!–û–®–ò–ë–ö–ê!!! –ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ")
    if a ==2:
        proxies=[]
        with open("proxies.txt", mode="w+") as file:
            proxies=file.readlines()
        
        with open("sessions.txt", mode="r+") as file:
            session=file.readlines()
            if len(proxies)==0:
                count_acc=len(session)
            else:
                count_acc=len(session)%len(proxies)
            loop = asyncio.get_event_loop()
            tasks = []
            data_full=[]
            counter=0
            curr_proxy_id=0
            for i in session:
                if counter==count_acc:
                    curr_proxy_id+=1
                if curr_proxy_id==len(proxies)-1:
                    curr_proxy_id-=1
                data_full.append([i.rstrip(),None])
                counter+=1

            for line in data_full:
                tasks.append(loop.create_task(like(line,data_full.index(line))))
            START_TIME= time.time()
            await asyncio.wait(tasks)
            ALL_TIME=round(time.time()-START_TIME)
            minutes=ALL_TIME//60
            console.print(f"[bold green]–ì–û–¢–û–í–û! –í—Ä–µ–º—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è {minutes} –º–∏–Ω. {ALL_TIME-minutes*60} —Å–µ–∫.")
    elif a==1:
        console.print("[bold green]–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã, –∂–º–∏—Ç–µ Enter.\n –ß—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å - –∂–º–∏—Ç–µ –∏–ª–∏ 'n' –∏–ª–∏ '–Ω'")
        while True:
            async with Client(f"{config.folder}my_acc",config.api_id, config.api_hash, in_memory=True) as app:
                with open("sessions.txt", mode="a+") as file:
                    session=await app.export_session_string()
                    file.write(f"{session}\n")              
            en=console.input("[purple]–î–æ–±–∞–≤–∏—Ç—å –µ—â–µ?")
            if en == 'n' or en == "–Ω":
                break
os.system("cls")
asyncio.run(main())
